<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ZONE_WIDTH = 20;
ZONE_HEIGHT = 12;
TILE_SIZE = 8;

gameDebug = false;
keyFrame  = 0;

worldLayout      = "";
worldWidth       = 0;
worldHeight      = 0;
worldStrPosition = 1; // 1-indexed strings in GM..?

xx = 0;
yy = 0;

// This flag is set to true after generation
init = false;

// Choose one of two tileset options
tile = choose(0, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Room generation

if (!init) {
    // Do one step of generation
    ProcGen();
    ++keyFrame;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug stuff

if (keyboard_check_pressed(ord('R')))
    room_restart();

if (keyboard_check_pressed(vk_escape))
    game_end();
 
// Player to cursor   
if (mouse_check_button_pressed(mb_left)) {
    if (instance_exists(oPlayer)) {
        with (oPlayer) {
            x = mouse_x;
            y = mouse_y;
        }
    } else {
        instance_create(mouse_x, mouse_y, oPlayer);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Mouse terrain generation

if (gameDebug) {
    if (mouse_check_button(mb_left)) {
        var mx, my;
        
        // Round to grid
        mx = mouse_x - (mouse_x mod TILE_SIZE);
        my = mouse_y - (mouse_y mod TILE_SIZE);
        
        // Spawn terrain at cursor
        if (!instance_position(mx, my, oParSolid))
            instance_create(mx, my, oBlock);
       
        // Re-tile terrain    
        with (oBlock)
            event_perform(ev_other, ev_user0);
    } else if (mouse_check_button(mb_right)) {
        var mx, my;
        
        // Round to grid
        mx = mouse_x - (mouse_x mod TILE_SIZE);
        my = mouse_y - (mouse_y mod TILE_SIZE);
        
        // Destroy terrain at cursor
        with (instance_position(mx, my, oParSolid))
            instance_destroy();
            
        // Re-tile terrain  
        with (oBlock)
            event_perform(ev_other, ev_user0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
